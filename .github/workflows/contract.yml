name: Contract

on:
  push:
    branches: [ "prod"]
    paths: [ 'contract/**' ]

jobs:
  testing:
    runs-on: ubuntu-latest
    env:
      POLYGON_ALCHEMY_API_URL: ${{ secrets.POLYGON_ALCHEMY_API_URL }}
      POLYGON_ALCHEMY_API_KEY: ${{ secrets.POLYGON_ALCHEMY_API_KEY }}
      METAMASK_PRIVATE_KEY: ${{ secrets.METAMASK_PRIVATE_KEY }}
      CONTRACT_ADDRESS: ${{ secrets.CONTRACT_ADDRESS }}
    defaults:
      run:
        working-directory: contract
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm i
      - name: Test Contract
        run: npx hardhat test
      - name: Test Api
        run: npx jest

  image:
    runs-on: ubuntu-latest
    env:
      POLYGON_ALCHEMY_API_URL: ${{ secrets.POLYGON_ALCHEMY_API_URL }}
      POLYGON_ALCHEMY_API_KEY: ${{ secrets.POLYGON_ALCHEMY_API_KEY }}
      METAMASK_PRIVATE_KEY: ${{ secrets.METAMASK_PRIVATE_KEY }}
      CONTRACT_ADDRESS: ${{ secrets.CONTRACT_ADDRESS }}
    defaults:
      run:
        working-directory: contract
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --build-arg POLYGON_ALCHEMY_API_URL=${POLYGON_ALCHEMY_API_URL} --build-arg POLYGON_ALCHEMY_API_KEY=${POLYGON_ALCHEMY_API_KEY} --build-arg METAMASK_PRIVATE_KEY=${METAMASK_PRIVATE_KEY} --build-arg CONTRACT_ADDRESS=${CONTRACT_ADDRESS} --file Dockerfile --tag registry.digitalocean.com/main/bdl-web3-contract
      - name: Login to registry
        run: docker login -u ${{ secrets.DOCKER_TOKEN }} -p ${{ secrets.DOCKER_TOKEN }} ${{ env.DOCKER_REGISTRY_DOMAIN }}
      - name: Build the Docker image
        run: docker push registry.digitalocean.com/main/bdl-web3-contract

  reload:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: contract
    steps:
      - uses: actions/checkout@v3
      - name: prepare env
        run: |
          ENV=$(cat << EOF
          HOST=contract.admeal.xyz
          DOCKER_PORT=4000
          EOF
          )
          echo "$ENV" > .env
      - name: read env
        run: cat .env
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: deploy.yml
          directory: .
          key: ${{secrets.SSH_PRIVATE_KEY}}
          inventory: |
            [local]
            127.0.0.1 env=prod dir=contract
            
            [api]
            165.22.29.8 ansible_user=root dir=contract

    needs:
      - testing
      - image
